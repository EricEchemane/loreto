generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(cuid())
  joinedAt DateTime @default(now())

  email    String  @unique
  username String
  photoUrl String?
  verified Boolean @default(false)

  // 1: admin
  // 2: staff
  // 3: customer
  role Int @default(3)

  // 1: active
  // 2: inactive
  // 3: banned
  // 4: deleted
  status Int @default(1)

  boxes        Box[]
  boxOrders    BoxOrder[]
  transactions Transaction[]
}

model Box {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  modifiedAt DateTime @updatedAt

  name             String
  status           Int     @default(1)
  logoUrl          String?
  phaseOneMarkings Json?
  phaseTwoMarkings Json?

  // diemnsions
  length Float
  width  Float
  height Float

  // owner
  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId String

  orders BoxOrder[]
}

model BoxOrder {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  modifiedAt DateTime @updatedAt
  quantity   Int      @default(1)

  // 0: cancelled
  // 1: in cart
  // 2: placed
  // 3: Processing
  // 4: For Delivery
  // 5: Delivered
  // 6: Completed
  status Int @default(1)

  // box
  box   Box    @relation(fields: [boxId], references: [id])
  boxId String

  // user
  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model Transaction {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  modifiedAt DateTime @updatedAt

  // 1: cash
  // 2: gcash
  // 3: bank
  mode Int

  // 2: completed
  // 3: failed
  // 4: for review
  status Int

  // 1: box
  item Int

  amount Float

  from       User?   @relation(fields: [fromUserId], references: [id])
  fromUserId String?
}
